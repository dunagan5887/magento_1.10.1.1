<?php
/**
 * Magento Enterprise Edition
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Magento Enterprise Edition License
 * that is bundled with this package in the file LICENSE_EE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.magentocommerce.com/license/enterprise-edition
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     enterprise_default
 * @copyright   Copyright (c) 2010 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://www.magentocommerce.com/license/enterprise-edition
 */
?>
<script type="text/javascript">
//<![CDATA[
    var paymentObj = parent.payment;
    function setPaymentMethod()
    {
        var jsonParams = <?php echo $this->getJsonHiddenPbridgeParams() ?>;
        if (jsonParams.original_payment_method) {
            var containerElement = parent.document.getElementById('payment_form_pbridge_' + jsonParams.original_payment_method);
            var listElements = containerElement.getElementsByTagName('LI');
            if (listElements.length) {
                containerElement = listElements[0];
            }
            var methodParam;
            parent.$H(jsonParams).each(function(param) {
                var paramId = 'pbridge_' + jsonParams.original_payment_method + '_' + param.key;
                var methodParam = parent.document.getElementById(paramId);

                if (methodParam) {
                    methodParam.setAttribute('value', param.value);
                } else {
                    methodParam = parent.document.createElement('input');
                    methodParam = parent.$(methodParam);
                    var attrs = {
                        'id':    paramId,
                        'type':  'hidden',
                        'name':  'payment[pbridge_data][' + param.key + ']',
                        'value': param.value
                    };
                    for (var name in attrs) methodParam.setAttribute(name, attrs[name]);
                    containerElement.appendChild(methodParam);
                }
            });
            try {
                paymentObj.save();
                var buttonsContainer = parent.document.getElementById('payment-buttons-container');
                var continueButton = buttonsContainer.getElementsByTagName('BUTTON');
                if (continueButton.length) {
                    continueButton = continueButton[0];
                }
                if (buttonsContainer && continueButton) {
                    continueButton.style.display = '';
                }
            } catch (e) {}
        }
        var message = document.getElementById('payment-method-message');
        message.innerHTML = '<?php echo Mage::helper('enterprise_pbridge')->__('Payment Bridge Selected') ?>';
    }
    window.onload = setPaymentMethod;
//]]>
</script>

<div id="payment-method-message"></div>
